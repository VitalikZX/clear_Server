import javax.print.attribute.Attribute;import java.awt.*;import java.awt.event.KeyEvent;import java.io.*;import java.net.Socket;import java.util.Scanner;import java.util.concurrent.Exchanger;public class clear_Server {    public static void main(String[] args) throws IOException {        BufferedReader in_ch    = null;        PrintWriter out    = null;        Socket fromServer = null;        Boolean isWork = false;        Exchanger<String> exchanger = new Exchanger<String>();        ServerWiFi serverWiFi;        char [] ch_Identification = new char[28];        char [] ch_Data = new char[340];        System.out.println("Welcome to server!");        try{            fromServer = new Socket("192.168.4.1",8108);            System.out.println("Connected...");        } catch (Exception e){            System.out.println("Can't open port!");            System.exit(1);        }        in_ch  = new BufferedReader(new InputStreamReader(fromServer.getInputStream()));        out = new PrintWriter(fromServer.getOutputStream());        int number = 0;        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));        int num;        while (number != 4) {            System.out.println("Please input number and press Enter button");            System.out.println("1 - for identification command.");            System.out.println("2 - for data request command.");            System.out.println("3 - for cyclical data request.");            System.out.println("4 - for quite.");            System.out.print("Came on: ");            try {                number = Integer.parseInt(in.readLine());                System.out.println();                if (number < 1) {                    System.out.println("----- Wrong chose. Please try again. -----");                    System.out.println();                    continue;                }            } catch (Exception e) {                System.out.println("----- Do you know what a number is? Please try again. -----");                System.out.println();                //e.printStackTrace();                continue;            }            if (number == 1) {                System.out.println("Send identification.");                new ServerWiFi(Command.IDENTIFICATION, ch_Identification, false);            } else if (number == 2){                System.out.print("Send Give me data.");                new ServerWiFi(Command.DATA_READ, ch_Data, false);            } else if (number == 3){                System.out.print("Send Give me data.");                new ServerWiFi(Command.DATA_READ, ch_Data, true);            } else {                in.close();                out.close();                in_ch.close();                fromServer.close();                System.out.println("Goodbye.");                System.exit(0);            }            try {                Thread.sleep(500);            } catch (Exception e){}        }    }}//        out.println("Hello!");//        out.flush();//        in_ch.read(ch_Hello);//        System.out.print("Send Hello. The response of server: ");//        for (int i=0; i<ch_Hello.length; i++){//            System.out.print(ch_Hello[i]);//            ch_Hello[i] = (char) 0;//        }//        try{//            Thread.sleep(1000);//        } catch (Exception e){}//////        out.println("Measure something.");//        out.flush();//        in_ch.read(ch_Measure);//        System.out.print("Send Measure something. The response of server: ");//        for (int i=0; i<ch_Measure.length; i++){//            System.out.print(ch_Measure[i]);//            ch_Measure[i] = (char) 0;//        }//        System.out.println();//        in_ch.read(ch_Measure);//        System.out.print("Send Measure something. The response of server: ");//        for (int i=0; i<ch_Measure.length; i++){//            System.out.print(ch_Measure[i]);//            ch_Measure[i] = (char) 0;//        }//        System.out.println();////        try{//            Thread.sleep(1000);//        } catch (Exception e){}////        out.println("Give me data.");//        out.flush();//        in_ch.read(ch_Data);//        System.out.print("Send Give me data. The response of server: ");//        for (int i=0; i<ch_Data.length; i++){//            System.out.print(ch_Data[i]);//            ch_Data[i] = (char) 0;//        }//        System.out.println();//        in_ch.read(ch_Data);//        System.out.print("Send Give me data. The response of server: ");//        for (int i=0; i<ch_Data.length; i++){//            System.out.print(ch_Data[i]);//            ch_Data[i] = (char) 0;//        }//        try{//            Thread.sleep(1000);//        } catch (Exception e){}//        System.out.println();////        out.println("Disconnect...");//        out.flush();//        in_ch.read(ch_Disconnect);//        System.out.print("Send Disconnect... The response of server: ");//        for (int i=0; i<ch_Disconnect.length; i++){//            System.out.print(ch_Disconnect[i]);//            ch_Disconnect[i] = (char) 0;//        }